kind: DataConnectorLink
version: v1
definition:
  name: mynodejs
  url:
    readWriteUrls:
      read:
        valueFromEnv: APP_MYNODEJS_READ_URL
      write:
        valueFromEnv: APP_MYNODEJS_WRITE_URL
  headers:
    Authorization:
      valueFromEnv: APP_MYNODEJS_AUTHORIZATION_HEADER
  schema:
    version: v0.1
    schema:
      scalar_types:
        Float:
          representation:
            type: float64
          aggregate_functions: {}
          comparison_operators:
            _eq:
              type: equal
        String:
          representation:
            type: string
          aggregate_functions: {}
          comparison_operators:
            _eq:
              type: equal
      object_types:
        Article:
          fields:
            author_id:
              type:
                type: named
                name: Float
            id:
              type:
                type: named
                name: Float
            related_articles:
              type:
                type: array
                element_type:
                  type: named
                  name: RelatedArticle
            title:
              type:
                type: named
                name: String
        Author:
          fields:
            id:
              type:
                type: named
                name: Float
            name:
              type:
                type: named
                name: String
        RelatedArticle:
          fields:
            id:
              type:
                type: named
                name: Float
            relationshipType:
              type:
                type: named
                name: String
      collections: []
      functions:
        - name: hello
          arguments:
            name:
              type:
                type: nullable
                underlying_type:
                  type: named
                  name: String
          result_type:
            type: named
            name: String
        - name: getAuthor
          description: Get author details by ID
          arguments:
            authorId:
              description: ID of the author to fetch (defaults to 1)
              type:
                type: named
                name: Float
          result_type:
            type: named
            name: Author
        - name: getArticle
          description: Get article by ID
          arguments:
            articleId:
              description: ID of the article to fetch (defaults to 1)
              type:
                type: named
                name: Float
          result_type:
            type: named
            name: Article
        - name: getArticles
          description: Get all articles
          arguments: {}
          result_type:
            type: array
            element_type:
              type: named
              name: Article
      procedures: []
    capabilities:
      version: 0.1.6
      capabilities:
        query:
          variables: {}
          nested_fields: {}
        mutation: {}
